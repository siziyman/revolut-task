/*
 * This file is generated by jOOQ.
 */
package revolut.home.task.account.tables.records;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import revolut.home.task.account.tables.Transactions;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> implements Record5<Long, Long, Long, BigDecimal, Timestamp> {

    private static final long serialVersionUID = -1289461870;

    /**
     * Setter for <code>PUBLIC.TRANSACTIONS.ID</code>.
     */
    public TransactionsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTIONS.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTIONS.SENDER</code>.
     */
    public TransactionsRecord setSender(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTIONS.SENDER</code>.
     */
    public Long getSender() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTIONS.RECIPIENT</code>.
     */
    public TransactionsRecord setRecipient(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTIONS.RECIPIENT</code>.
     */
    public Long getRecipient() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTIONS.AMOUNT</code>.
     */
    public TransactionsRecord setAmount(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTIONS.AMOUNT</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>PUBLIC.TRANSACTIONS.SENT</code>.
     */
    public TransactionsRecord setSent(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>PUBLIC.TRANSACTIONS.SENT</code>.
     */
    public Timestamp getSent() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, BigDecimal, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, BigDecimal, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Transactions.TRANSACTIONS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Transactions.TRANSACTIONS.SENDER;
    }

    @Override
    public Field<Long> field3() {
        return Transactions.TRANSACTIONS.RECIPIENT;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Transactions.TRANSACTIONS.AMOUNT;
    }

    @Override
    public Field<Timestamp> field5() {
        return Transactions.TRANSACTIONS.SENT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getSender();
    }

    @Override
    public Long component3() {
        return getRecipient();
    }

    @Override
    public BigDecimal component4() {
        return getAmount();
    }

    @Override
    public Timestamp component5() {
        return getSent();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getSender();
    }

    @Override
    public Long value3() {
        return getRecipient();
    }

    @Override
    public BigDecimal value4() {
        return getAmount();
    }

    @Override
    public Timestamp value5() {
        return getSent();
    }

    @Override
    public TransactionsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionsRecord value2(Long value) {
        setSender(value);
        return this;
    }

    @Override
    public TransactionsRecord value3(Long value) {
        setRecipient(value);
        return this;
    }

    @Override
    public TransactionsRecord value4(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public TransactionsRecord value5(Timestamp value) {
        setSent(value);
        return this;
    }

    @Override
    public TransactionsRecord values(Long value1, Long value2, Long value3, BigDecimal value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Long id, Long sender, Long recipient, BigDecimal amount, Timestamp sent) {
        super(Transactions.TRANSACTIONS);

        set(0, id);
        set(1, sender);
        set(2, recipient);
        set(3, amount);
        set(4, sent);
    }
}
