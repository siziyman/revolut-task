/*
 * This file is generated by jOOQ.
 */
package revolut.home.task.account;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import revolut.home.task.account.tables.Accounts;
import revolut.home.task.account.tables.Currencies;
import revolut.home.task.account.tables.Transactions;
import revolut.home.task.account.tables.records.AccountsRecord;
import revolut.home.task.account.tables.records.CurrenciesRecord;
import revolut.home.task.account.tables.records.TransactionsRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Identities0.IDENTITY_ACCOUNTS;
    public static final Identity<TransactionsRecord, Long> IDENTITY_TRANSACTIONS = Identities0.IDENTITY_TRANSACTIONS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountsRecord> CONSTRAINT_A = UniqueKeys0.CONSTRAINT_A;
    public static final UniqueKey<CurrenciesRecord> CONSTRAINT_D = UniqueKeys0.CONSTRAINT_D;
    public static final UniqueKey<TransactionsRecord> CONSTRAINT_F = UniqueKeys0.CONSTRAINT_F;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AccountsRecord, CurrenciesRecord> CONSTRAINT_AF = ForeignKeys0.CONSTRAINT_AF;
    public static final ForeignKey<TransactionsRecord, AccountsRecord> CONSTRAINT_FE = ForeignKeys0.CONSTRAINT_FE;
    public static final ForeignKey<TransactionsRecord, AccountsRecord> CONSTRAINT_FE9 = ForeignKeys0.CONSTRAINT_FE9;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AccountsRecord, Long> IDENTITY_ACCOUNTS = Internal.createIdentity(Accounts.ACCOUNTS, Accounts.ACCOUNTS.ID);
        public static Identity<TransactionsRecord, Long> IDENTITY_TRANSACTIONS = Internal.createIdentity(Transactions.TRANSACTIONS, Transactions.TRANSACTIONS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AccountsRecord> CONSTRAINT_A = Internal.createUniqueKey(Accounts.ACCOUNTS, "CONSTRAINT_A", Accounts.ACCOUNTS.ID);
        public static final UniqueKey<CurrenciesRecord> CONSTRAINT_D = Internal.createUniqueKey(Currencies.CURRENCIES, "CONSTRAINT_D", Currencies.CURRENCIES.ID);
        public static final UniqueKey<TransactionsRecord> CONSTRAINT_F = Internal.createUniqueKey(Transactions.TRANSACTIONS, "CONSTRAINT_F", Transactions.TRANSACTIONS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AccountsRecord, CurrenciesRecord> CONSTRAINT_AF = Internal.createForeignKey(revolut.home.task.account.Keys.CONSTRAINT_D, Accounts.ACCOUNTS, "CONSTRAINT_AF", Accounts.ACCOUNTS.CURRENCY);
        public static final ForeignKey<TransactionsRecord, AccountsRecord> CONSTRAINT_FE = Internal.createForeignKey(revolut.home.task.account.Keys.CONSTRAINT_A, Transactions.TRANSACTIONS, "CONSTRAINT_FE", Transactions.TRANSACTIONS.SENDER);
        public static final ForeignKey<TransactionsRecord, AccountsRecord> CONSTRAINT_FE9 = Internal.createForeignKey(revolut.home.task.account.Keys.CONSTRAINT_A, Transactions.TRANSACTIONS, "CONSTRAINT_FE9", Transactions.TRANSACTIONS.RECIPIENT);
    }
}
